df1 <- ("H:\\getdata_data_EDSTATS_Country.csv", header=TRUE)
df1 <- read.csv("H:\\getdata_data_EDSTATS_Country.csv", header=TRUE)
df2 <- read.csv("H:\\getdata_data_GDP", header=TRUE)
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=TRUE)
str(df2)
str(df1)
df1[1:10, ]
df2[1:10, ]
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=TRUE, sep=",")
df2[1:10, ]
?read.csv
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=TRUE, sep=",", skip=5)
df2[1:10, ]
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, sep=",", skip=5)
df2[1:10, ]
colnames(df2)[1] <- "CountryCode"
df3 <- merge(df1, df2, by="CountryCode", all.x=TRUE)
df3
df3[1;10, ]
df3[1:10, ]
str(df3)
nrow(df1);nrow(df2);nrow(df3)
<
df3 <- merge(df1, df2, by="CountryCode")
str(df3)
df3[1:35, ]
head(df1)
df1 <- df1[ ,1:2]
head(df2)
df2 <- df2[ ,c(1,4)]
df1$frame1 <- 1
df2$frame2 <- 1
df3 <- merge(df1, df2, by="CountryCode")
df3[1:10, ]
df3
nrow(df1);nrow(df2);nrow(df3)
df1 <- read.csv("H:\\getdata_data_EDSTATS_Country.csv", header=TRUE)
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, sep=",", skip=5)
colnames(df2)[1] <- "CountryCode"
df1 <- df1[ ,1:2]
df2 <- df2[ ,c(1,4)]
df3 <- merge(df1, df2, by="CountryCode")
str(df3)
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, sep=",", skip=5)
df2
head(df2)
df1 <- read.csv("H:\\getdata_data_EDSTATS_Country.csv", header=TRUE)
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, sep=",", skip=5)
colnames(df2)[1] <- "CountryCode"
df1 <- df1[ ,1:2]
df2 <- df2[ ,c(1,4,5)]
df3 <- merge(df1, df2, by="CountryCode")
df3[sort(df3)]
head(df3)
df3[sort(df3[ ,4], descending=TRUE), ]
df3
sort(df3[ ,5], descending=TRUE)
sort(df3[ ,4], descending=TRUE)
str(df3)
df3[ ,4] <- as.numeric(df3[ ,4])
sort(df3[ ,4], descending=TRUE)
sort(df3[ ,4], decreasing=TRUE)
df3
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, sep=",", skip=5, stringsAsFactors=FALSE)
df1 <- read.csv("H:\\getdata_data_EDSTATS_Country.csv", header=TRUE)
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, sep=",", skip=5, stringsAsFactors=FALSE)
colnames(df2)[1] <- "CountryCode"
df1 <- df1[ ,1:2]
df2 <- df2[ ,c(1,4,5)]
df3 <- merge(df1, df2, by="CountryCode")
df3[ ,4] <- as.numeric(df3[ ,4])
sort(df3[ ,4], decreasing=TRUE)
nrow(df1);nrow(df2);nrow(df3)
df3[1:10, ]
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, sep=",", skip=5, stringsAsFactors=FALSE)
str(df2)
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, sep=",", skip=5, stringsAsFactors=FALSE)
df2
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, sep=";")
str(df2)
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, sep=";")
str(df2)
df2[1:50, ]
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, sep=";", stringsAsFactors=FALSE)
df2[1:50, ]
df2 <- read.csv("H:\\getdata_data_GDP.csv", header=FALSE, stringsAsFactors=FALSE)
df2
str(df2)
head(df2)
library("foreign")
gdp <- read.spss("H:\\gdp.sav")
gdp
gdp <- read.spss("H:\\gdp.sav", to.data.frame=TRUE)
head(gdp)
quantile(gdp$Rank, prob=rep(.2,5)
)
taeble(gdp$Rank, quantile(gdp$Rank, prob=rep(.2,5)))
table(gdp$Rank, quantile(gdp$Rank, prob=rep(.2,5)))
q()
install.packages("knitr", dependencies = FALSE)
library('knitr')
library(knitr)
library("knitr")
library()
library(knitr)
install.packages("knitr")
library(knitr)
q()
q()
setwd("H:\\Coursera\\Data Science Track\\05_Reproducible Research\\week 2\\RepData_PeerAssessment1\\RepData_PeerAssessment1\\activity")
act <- read.csv("H:\\Coursera\\Data Science Track\\05_Reproducible Research\\week 2\\RepData_PeerAssessment1\\RepData_PeerAssessment1\\activity\\activity.csv", sep=",", header=TRUE, na.strings="NA")
act$date <- as.Date(as.character(act$date, format = "%Y-%m-%d"))
sumOfSteps <- tapply(act$steps, act$date, sum)
str(sumOfSteps)
class(sumOfSteps)
sumOfSteps <- as.data.frame(tapply(act$steps, act$date, sum))
sumOfSteps
str(sumOfSteps)
class(sumOfSteps)
sumOfSteps <- as.list(tapply(act$steps, act$date, sum))
sumOfSteps
str(sumOfSteps)
head(str(sumOfSteps))
(class(sumOfSteps))
sumOfSteps[1]
sumOfSteps[[1]]
sumOfSteps[[2]]
unlist(sumOfSteps)
str(unlist(sumOfSteps))
sumOfSteps <- as.list(tapply(act$steps, act$date, sum))
sumOfSteps <- as.data.frame(unlist(sumOfSteps)
)
sumOfSteps
str(sumOfSteps)
sumOfSteps <- as.data.frame(tapply(act$steps, act$date, sum))
sumOfSteps
str(sumOfSteps)
sumOfSteps <- tapply(act$steps, act$date, sum)
str(sumOfSteps)
sumOfSteps[1:nrow(sumOfSteps)]
sumOfSteps[[1:nrow(sumOfSteps)]
]
sumOfSteps[[1:5]]
sumOfSteps[[1]]:[[5]]
sumOfSteps[[1]]:sumOfSteps[[5]]
sumOfSteps[[2]]:sumOfSteps[[5]]
args(tapply)
sumOfSteps <- tapply(act$steps, act$date, sum, simplify=FALSE)
str(sumOfSteps)
class(sumOfSteps)
sumOfSteps
sumOfSteps[[1]]
sumOfSteps[[2]]
sumOfSteps[1]
t1 <- as.data.frame(unlist(sumOfSteps))
t1
str(t1)
?tapply
str(act)
act$day <- 1:nrow(act)
act
head(act)
tail(act)
?unique
act[1:20, ]
table(act$interval)
?tapply
tail(act)
head(act)
format(act$date, "%d")
act$day <- as.numeric(format(date1, "%m"))
act$day <- as.numeric(format(act$date, "%m"))
act[1:10]
act[1:10,]
act$day <- as.numeric(format(act$date, "%d"))
act[1:10,]
act[100:120,]
act$date > 2012-11-01
table(act$date > 2012-11-01)
table(act$date)
table(act$date >= 2012-10-01)
table(act$date >= 201892-10-01)
table(act$date >= 2012-11-01)
table(act$date >= "2012-11-01")
table(act$day)
act$day <- as.numeric(format(act$date, "%d"))
if (act$date >= "2012-11-01") act$day + 31
if (act$date >= "2012-11-01") print('blah')
act$day[act$date >= "2012-11-01"]
act$day[act$date >= "2012-11-01"] <- act$day + 31
act$day[act$date >= "2012-11-01"] <- act$day[act$date >= "2012-11-01"] + 31
tail(act)
act
act[1400: nrow(act), ]
which(act$day==31)
act[8927:9927, ]
act[8927:9027, ]
act[8927:8999, ]
act[8927:8940, ]
act$day <- as.numeric(format(act$date, "%d"))
act[8927:8940, ]
act$day[act$date >= "2012-11-01"] <- act$day[act$date >= "2012-11-01"] + 31
act[8927:8940, ]
table(act$day)
sumOfSteps <- tapply(act$steps, act$day, sum)
sumOfSteps
str(sumOfSteps)
sumOfSteps <- as.data.frame(tapply(act$steps, act$day, sum))
str(sumOfSteps)
t1 <- aggregate(act$steps, act$day, FUN="sum")
t1 <- aggregate(act$steps, as.list(act$day), FUN="sum")
t1 <- aggregate(act$steps, list(act$day), FUN="sum")
str(t1)
sumOfSteps <- aggregate(act$steps, list(act$day), FUN="sum")
hist(sumOfSteps)
hist(table(sumOfSteps))
(sumOfSteps)
table(sumOfSteps)
hist(sumOfSteps)
plot(sumOfSteps)
hist(sumOfSteps[ ,2])
args(hist)
?host
?hist
hist(sumOfSteps[ ,2])
hist(sumOfSteps[ ,2], breaks=61)
hist(t(sumOfSteps[ ,2], breaks=61))
hist(t(sumOfSteps[ ,2])
)
sum(act$steps)
sum(act$steps, na.rm=TRUE)
hist(1:20)
sumOfSteps
t(sumOfSteps)
hist(t(sumOfSteps))
t1 <- as.data.frame(t(sumOfSteps))
t1
hist(act$steps)
hist(act$steps, breaks=61)
hist(act$steps, breaks=10)
hist(t(act$steps, breaks=10))
hist(t(act$steps))
t(act$steps)
as.data.frame((act$steps))
hist(sumOfSteps, na.rm=TRUE)
hist(sumOfSteps)
sumOfSteps
is.na(sumOfSteps)
?hist
barplot(sumOfSteps)
args(barplot)
?barplot
plot(sumOfSteps, type="h")
?plot
hist(sumOfSteps)
(sumOfSteps)
hist(act$steps[act$day==1])
hist(act$steps[act$day==1, ])
hist(act$steps[act$day==1],breaks=5)
act$steps[act$day==1]
hist(act$steps[act$day==2])
act[act$day==2, ]
act[act$day==3, ]
hist(act[act$day==3, ])
hist(act[act$day==3])
hist(act$steps[act$day==3])
hist(act$steps)
hist(act$steps)
table(act$steps)
hist(table(act$steps))
hist(table(act$steps), xlim=c(0, 800))
hist(table(act$steps), xlim=c(0, 10))
hist(table(act$steps), breaks=10)
hist(table(act$steps), breaks=2)
?host
?hist
hist(table(act$steps), breaks=0:100)
hist(table(act$steps), breaks=c(0,100)
)
plot(sumOfSteps)
sumOfSteps
barplot(sumOfSteps)
barplot(sumOfSteps, height=1)
barplot(sumOfSteps, height=1, width=1)
barplot(sumOfSteps[, 2])
args(barplot)
?(barplot)
?barplot
barplot(sumOfSteps[, 2], xlimx=c(1, 61))
barplot(sumOfSteps[, 2], xlim=c(1, 61))
barplot(sumOfSteps[, 2], xaxes=TRUE)
barplot(sumOfSteps[, 2], xaxes=TRUE, cex.names=1:61)
barplot(sumOfSteps[, 2], cex.names=1:61)
barplot(sumOfSteps[, 2], cex.names=1:61)
barplot(sumOfSteps[, 2])
barplot(sumOfSteps)
barplot(sumOfSteps[, 2])
barplot(sumOfSteps[, 2])
barplot(sumOfSteps[, 2], axes=TRUE, cex.names=1:61)
barplot(sumOfSteps[, 2], axes=TRUE)
barplot(sumOfSteps[, 2], axes=TRUE)
barplot(sumOfSteps[, 2], axes=TRUE, axisnames=TRUE)
barplot(sumOfSteps[, 2], axis.lty=1, axes=TRUE, axisnames=TRUE)
barplot(sumOfSteps[, 2], axis.lty="l", axes=TRUE, axisnames=TRUE)
barplot(sumOfSteps[, 2], axis.lty="ldfvfds", axes=TRUE, axisnames=TRUE)
barplot(sumOfSteps[, 2], axis.lty=3)
barplot(sumOfSteps[, 2], names.arg=1:61)
sumOfSteps <- aggregate(act$steps, list(act$day), FUN="sum")
sumOfSteps
barplot(sumOfSteps[, 2], names.arg=1:61)
barplot(sumOfSteps[, 2], names.arg=1:61)
ls()
rm(list=ls())
sumOfSteps <- aggregate(act$steps, list(act$day), FUN="sum")
gewtd()
getwd()
act <- read.csv("H:\\Coursera\\Data Science Track\\05_Reproducible Research\\week 2\\RepData_PeerAssessment1\\RepData_PeerAssessment1\\activity\\activity.csv", sep=",", header=TRUE, na.strings="NA")
act$date <- as.Date(as.character(act$date, format = "%Y-%m-%d"))
act$day <- as.numeric(format(act$date, "%d"))
act$day[act$date >= "2012-11-01"] <- act$day[act$date >= "2012-11-01"] + 31
sumOfSteps <- aggregate(act$steps, list(act$day), FUN="sum")
barplot(sumOfSteps[, 2], names.arg=1:61)
aggregate(act$steps, list(act$day), FUN="mean")
print(meanSteps, row.names=FALES)
meanSteps <- aggregate(act$steps, list(act$day), FUN="mean")
colnames(meanSteps)[1] <- "Day"
colnames(meanSteps)[2] <- "Mean"
print(meanSteps, row.names=FALSE)
medianSteps <- aggregate(act$steps, list(act$day), FUN="median")
colnames(medianSteps)[1] <- "Day"
colnames(medianSteps)[2] <- "Median"
print(medianSteps, row.names=FALSE)
head(act)
grandMeanSteps <- aggregate(act$steps, list(act$interval), FUN="mean")
grandMeanSteps
grandMeanSteps <- aggregate(act$steps, list(act$interval), FUN="mean", na.rm=TRUE)
grandMeanSteps
grandMeanSteps <- aggregate(act$steps, list(act$interval), FUN="mean", na.rm=TRUE, row.names=FALSE)
grandMeanSteps
grandMeanSteps <- aggregate(act$steps, list(act$interval), FUN="mean", na.rm=TRUE)
colnames(grandMeanSteps)[1] <- "5minInterval"
colnames(grandMeanSteps)[2] <- "Mean"
print(medianSteps, row.names=FALSE)
print(grandMeanSteps, row.names=FALSE)
plot(grandMeanSteps, type="l")
which.max(grandMeanSteps)
which.max(grandMeanSteps[ ,2])
grandMeanSteps[which.max(grandMeanSteps[ ,2]), 1]
maxStep <- grandMeanSteps[which.max(grandMeanSteps[ ,2]), 1]
maxStep
print(c("It is the", maxStep,"-th time interval"))
print(paste(c("It is the", maxStep,"-th time interval")), sep ="")
print(paste(c("It is the", maxStep,"-th time interval")), sep ="dgfdgf")
paste(c("It is the", maxStep,"-th time interval"))
paste(c("It is the", maxStep,"-th time interval"), sep="")
args(paste)
paste("a","b","c")
paste("It is the", maxStep,"-th time interval", sep="")
paste("It is the", maxStep,"-th time interval", sep=" ")
table(is.na(act$steps))
actNAreplace <- act
actNAreplace
grandMeanSteps
"John Woo"
actNAreplace[is.na(actNAreplace$steps)]
actNAreplace[is.na(actNAreplace$steps), ]
grandMeanSteps
actNAreplace[is.na(actNAreplace$steps)] <- grandMeanSteps$Mean[grandMeanSteps$5minInterval==actNAreplace$interval]
actNAreplace[is.na(actNAreplace$steps)] <- 99
actNAreplace[is.na(actNAreplace$steps), ]
head(actNAreplace[is.na(actNAreplace$steps), ])
actNAreplace$steps[is.na(actNAreplace$steps)]
actNAreplace$steps[is.na(actNAreplace$steps)] <- grandMeanSteps$Mean[grandMeanSteps$5minInterval==actNAreplace$interval]
grandMeanSteps$Mean[grandMeanSteps$5minInterval==actNAreplace$interval]
grandMeanSteps$5minInterval==actNAreplace$interval
grandMeanStep$Mean[grandMeanSteps$5minInterval==actNAreplace$interval]
grandMeanSteps$Mean[grandMeanSteps$5minInterval==100]
head(grandMeanSteps)
grandMeanSteps$[grandMeanSteps$5minInterval==100, ]
grandMeanSteps$Mean[grandMeanSteps$5minInterval==100, ]
grandMeanSteps$Mean[grandMeanSteps$5minInterval==100]
grandMeanSteps[grandMeanSteps$5minInterval==100, ]
grandMeanSteps$5minInterval==100
grandMeanSteps[ ,1]==100
grandMeanSteps
head(grandMeanSteps)
grandMeanSteps <- aggregate(act$steps, list(act$interval), FUN="mean", na.rm=TRUE)
head(grandMeanSteps)
colnames(grandMeanSteps)[1] <- "Interval"
colnames(grandMeanSteps)[2] <- "Mean"
grandMeanSteps$Interval==100
grandMeanSteps$Mean[grandMeanSteps$Interval==actNAreplace$interval]
head(actNAreplace)
actNAreplace$steps[is.na(actNAreplace$steps)] <- 99
head(actNAreplace)
actNAreplace <- act
actNAreplace$steps[is.na(actNAreplace$steps) & actNAreplace$interval==grandMeanSteps$Interval]
actNAreplace$steps[is.na(actNAreplace$steps) & actNAreplace$interval==grandMeanSteps$Interval] <- grandMeanSteps$Mean[grandMeanSteps$Interval==actNAreplace$interval]
actNAreplace$steps[is.na(actNAreplace$steps) & actNAreplace$interval==grandMeanSteps$Interval]
actNAreplace$steps[is.na(actNAreplace$steps) & actNAreplace$interval==100]
str(grandMeanSteps)
grandMeanSteps$Mean[grandMeanSteps$Interval==100
]
for (i in 1:nrow(actNAreplace))
{
if (is.na(actNAreplace$steps[i])) actNAreplace$steps[i] <- grandMeanSteps$Mean[grandMeanSteps$Interval==actNAreplace$interval[i]]
}
head(actNAreplace)
barplot(meanSteps[, 2], names.arg=1:61, xlab="Number of days", ylab="Mean of taken steps")
medianSteps - MedianSteps2
medianSteps2 <- aggregate(actNAreplace$steps, list(actNAreplace$day), FUN="median")
colnames(medianSteps2)[1] <- "Day"
colnames(medianSteps2)[2] <- "Median"
print(medianSteps2, row.names=FALSE)
meanSteps2 <- aggregate(actNAreplace$steps, list(actNAreplace$day), FUN="mean")
colnames(meanSteps2)[1] <- "Day"
colnames(meanSteps2)[2] <- "Mean"
meanSteps - MeanSteps2
meanSteps2 <- aggregate(actNAreplace$steps, list(actNAreplace$day), FUN="mean")
colnames(meanSteps2)[1] <- "Day"
colnames(meanSteps2)[2] <- "Mean"
meanSteps - MeanSteps2
meanSteps - meanSteps2
meanSteps[ ,2] - meanSteps2[ ,2]
medianSteps - medianSteps2
medianSteps[ ,2] - medianSteps2[ ,2]
meanSteps[ ,2] - meanSteps2[ ,2]
mean(meanSteps[ ,2]) - mean(meanSteps2[ ,2])
mean(medianSteps[ ,2]) - mean(medianSteps2[ ,2])
mean(meanSteps[ ,2], na.rm=TRUE) - mean(meanSteps2[ ,2])
mean(medianSteps[ ,2], na.rm=TRUE) - mean(medianSteps2[ ,2])
print(mean(meanSteps[ ,2], na.rm=TRUE) - mean(meanSteps2[ ,2]), digits=3)
args(print)
?print
print(pi)
print(pi, digits=3)
print(0, digits=3)
print(1, digits=3)
args(weekdays)
weekdays(actNAreplace$date)
args(factor)
actNAreplace$weekday <- weekdays(actNAreplace$date)
tail(actNAreplace)
actNAreplace$actualDay <- weekdays(actNAreplace$date)
str(actNAreplace)
names(actNAreplace)
actNAreplace <- actNAreplace[ ,-5]
NonWeekend <- c("maandag","dinsdag","woensdag","donderdag","vrijdag")
Weekend <- c("zaterdag","zondag")
actNAreplace$weekday[actNAreplace$actualDay %in% NonWeekend] <- as.factor(1)
actNAreplace$weekday[actNAreplace$actualDay %in% Weekend] <- as.factor(2)
actNAreplace[1:100, ]
actNAreplace[251:300, ]
actNAreplace[702:800, ]
actNAreplace[1702:1800, ]
actNAreplace$actualDay <- weekdays(actNAreplace$date)
NonWeekend <- c("maandag","dinsdag","woensdag","donderdag","vrijdag")
Weekend <- c("zaterdag","zondag")
actNAreplace$weekday[actNAreplace$actualDay %in% NonWeekend] <- as.factor(1)
actNAreplace$weekday[actNAreplace$actualDay %in% Weekend] <- as.factor(2)
table(actNAreplace$weekday)
table(actNAreplace$actualDay %in% Weekend)
actNAreplace$weekday[actNAreplace$actualDay %in% Weekend]
actNAreplace$weekday[actNAreplace$actualDay %in% NonWeekend] <- 1
actNAreplace$weekday[actNAreplace$actualDay %in% Weekend] <- 2
table(actNAreplace$weekday)
str(actNAreplace)
actNAreplace$weekday <- as.factor(actNAreplace$weekday, levels=1:2,
labels=c("Weekday","Weekend"))
args(as.factor)
?as.factor
actNAreplace$weekday <- factor(actNAreplace$weekday, levels=1:2,
labels=c("Weekday","Weekend"))
str(actNAreplace)
table(actNAreplace$weekday)
plot(actNAreplace$steps)
plot(actNAreplace$steps, actNAreplace$interval, type="l")
plot(actNAreplace$interval, actNAreplace$steps, type="l")
plot(grandMeanSteps, type="l", xlab="Five minute interval", ylab="Mean of taken steps")
table(actNAreplace$weekday)
grandMeanWeek <- aggregate(actNAreplace$steps[actNAreplace$weekday==1], list(actNAreplace$interval[actNAreplace$weekday==1]), FUN="mean", na.rm=TRUE)
colnames(grandMeanWeek)[1] <- "Interval"
colnames(grandMeanWeek)[2] <- "Mean"
grandMeanWeek <- aggregate(actNAreplace$steps[actNAreplace$weekday=="Weekday"], list(actNAreplace$interval[actNAreplace$weekday=="Weekday"]), FUN="mean", na.rm=TRUE)
colnames(grandMeanWeek)[1] <- "Interval"
colnames(grandMeanWeek)[2] <- "Mean"
grandMeanWeekend <- aggregate(actNAreplace$steps[actNAreplace$weekday=="Weekend"], list(actNAreplace$interval[actNAreplace$weekday=="Weekend"]), FUN="mean", na.rm=TRUE)
colnames(grandMeanWeekend)[1] <- "Interval"
colnames(grandMeanWeekend)[2] <- "Mean"
plot(grandMeanweek, type="l", xlab="Five minute interval", ylab="Mean of taken steps")
plot(grandMeanWeek, type="l", xlab="Five minute interval", ylab="Mean of taken steps")
plot(grandMeanWeekend, type="l", xlab="Five minute interval", ylab="Mean of taken steps")
par(mfrow=c(1,2))
plot(grandMeanWeek, type="l", xlab="Five minute interval", ylab="Mean of taken steps")
plot(grandMeanWeekend, type="l", xlab="Five minute interval", ylab="Mean of taken steps")
par(mfrow=c(2,1))
plot(grandMeanWeek, type="l", xlab="Five minute interval", ylab="Mean steps weekdays")
plot(grandMeanWeekend, type="l", xlab="Five minute interval", ylab="Mean steps weekend")
par(mfrow=c(1,2))
plot(grandMeanWeek, type="l", xlab="Five minute interval", ylab="Mean steps weekdays")
plot(grandMeanWeekend, type="l", xlab="Five minute interval", ylab="Mean steps weekend")
max(grandMeanWeek$Mean)
head(grandMeanSteps)
ls()
plot(grandMeanSteps, type="l", lwd=3)
plot(grandMeanSteps, type="l", lwd=2)
plot(grandMeanSteps, type="l", lwd=1)
plot(grandMeanSteps, type="l", lwd=1.5)
plot(grandMeanSteps, type="l", lwd=2)
str(actNAreplace$weekday)
str(actNAreplace)
q()
